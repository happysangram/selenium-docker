<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.dockerpomvims</groupId>
  <artifactId>DockerPOMVims</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>DockerPOMVims</name>
  <url>http://maven.apache.org</url>

    <properties>
        <selenium.java.version>4.11.0</selenium.java.version>
        <testng.version>7.8.0</testng.version>
        <jackson.version>2.17.2</jackson.version>
        <!-- plugins versions -->
        <maven.compiler.version>3.11.0</maven.compiler.version>
        <maven.dependency.version>3.6.0</maven.dependency.version>
        <maven.jar.version>3.3.0</maven.jar.version>
        <maven.surefire.version>3.1.2</maven.surefire.version>
        <maven.resources.plugin>3.3.1</maven.resources.plugin>
        <testngxml>testng.xml</testngxml>
        <!-- output directory -->
        <package.directory>${project.build.directory}/docker-resources</package.directory>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>${selenium.java.version}</version>
        </dependency>
        <!-- To deserialize json into Java object or vice versa -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Test framework -->
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testng.version}</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>selenium-docker</finalName>
        <plugins>

            <!-- To run the tests using specific parameters, change thread count, testng report output directory etc -->
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-surefire-plugin</artifactId>
                            <version>3.0.0</version>
                            <configuration>
                                <systemPropertyVariables>
                                    <selenium.grid.enabled>false</selenium.grid.enabled>
                                    <browser>chrome</browser>
                                </systemPropertyVariables>
                                <suiteXmlFiles>
                                 <!--<suiteXmlFile>${testngxml}</suiteXmlFile>-->
                                    <file>src/test/resources/Test-suites-vendor/testng.xml</file>
                                    <file>src/test/resources/Test-suites/testng.xml</file>
                                </suiteXmlFiles>
                                <parallel>tests</parallel>
                                <threadCount>100</threadCount>
                                <reportsDirectory>target/test-output</reportsDirectory>
                            </configuration>
                        </plugin>

            <!--To compile the source code using specific java version. also to force IDE to change the settings-->
                                                    <plugin>
                                                        <groupId>org.apache.maven.plugins</groupId>
                                                        <artifactId>maven-compiler-plugin</artifactId>
                                                        <version>3.11.0</version>
                                                        <configuration>
                                                            <compilerVersion>17</compilerVersion>
                                                            <source>17</source>
                                                            <target>17</target>
                                                            <testSource>17</testSource>
                                                            <testTarget>17</testTarget>
                                                        </configuration>
                                                    </plugin>
            <!-- To copy all the dependencies to run our tests as part of "mvn package" -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>copy-dependencies</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>copy-dependencies</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>
                                    ${project.build.directory}/docker-resources/libs
                                </outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            <!-- To package our page objects, test classes into jar -->
                                        <plugin>
                                            <groupId>org.apache.maven.plugins</groupId>
                                            <artifactId>maven-jar-plugin</artifactId>
                                            <version>3.3.0</version>
                                            <configuration>
                                                <outputDirectory>${package.directory}/libs</outputDirectory>
<!--                                                <outputDirectory>${package.directory}</outputDirectory>-->
                                            </configuration>
                                            <executions>
                                                <execution>
                                                    <goals>
                                                        <goal>test-jar</goal>
                                                    </goals>
                                                    <configuration>
                                                        <includes>**/*.class</includes>
                                                    </configuration>
                                                </execution>
                                            </executions>
                                        </plugin>

            <!--       To copy resources into the output directory        -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven.resources.plugin}</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${package.directory}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/test/resources</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
